// ------------------------------
// edX Pattern Library: Components - Buttons

// About: Contains base styling for demonstration and utility for buttons.
// ----------------------------

// #LAYOUT
// #GLOBALS
// #BASE (size)
// #LARGE (size)
// #SMALL (size)
// #DEFAULT (style)
// #DEFAULT-ALT (style)
// #PRIMARY (style)
// #SECONDARY (style)
// #SECONDARY-ALT (style)
// #LINK (style)
// #ELEVATED (type)
// #COMBO (type)
// #ICONS (type)
// #OVERLAY (type)
// ----------------------------

// ----------------------------
// #LAYOUT
// ----------------------------
.example-set {
    @extend %clear-last-child;
    padding-bottom: spacing-vertical(base);
    border-bottom: spacing-vertical(xx-small) solid palette(grayscale, xx-light);
    margin-bottom: spacing-vertical(base);

    .button-overlay-demo {
        padding: 2rem;
        background: palette(grayscale, base);
    }
}

// ----------------------------
// #GLOBALS
// ----------------------------
.btn {
    @include transition(
        color timing(xx-fast) ease-in-out 0s,
        border-color timing(xx-fast) ease-in-out 0s,
        background timing(xx-fast) ease-in-out 0s,
        box-shadow timing(xx-fast) ease-in-out 0s
    );

    // Display: inline, side-by-side
    display: inline-block;
    border-style: $buttons-border-style;
    border-radius: $buttons-border-radius;
    border-width: $buttons-border-size;

    // Display: block, one button per line, full width
    &.block {
        display: block;
        width: 100%;
    }
}

// ----------------------------
// #BASE
// ----------------------------
.btn-base {
    font-size: font-size(mid-large);
    padding: rem(($baseline/1.5)) rem(($baseline*1.25));
}


// ----------------------------
// #LARGE
// ----------------------------
.btn-large {
    font-size: font-size(large);
    padding: rem($baseline) rem(($baseline*1.5));
}


// ----------------------------
// #SMALL
// ----------------------------
.btn-small {
    font-size: font-size(small);
    padding: rem(($baseline/2)) rem(($baseline/1.5));
}


// ----------------------------
// #DEFAULT
// ----------------------------
.btn-default {
    background: palette(grayscale, white);
    border-color: palette(primary, mid-dark);
    color: palette(primary, mid-dark);

    // STATE: hover and focus
    &:hover,
    &.is-hovered,
    &:focus,
    &.is-focused {
        background: palette(primary, mid-dark);
        color: palette(grayscale, white);
    }

    // STATE: is pressed or active
    &:active,
    &.is-pressed,
    &.is-active {
        background: palette(primary, dark);
        border-color: palette(primary, dark);
    }

    // STATE: is disabled
    &:disabled,
    &.is-disabled {
        background: palette(grayscale, white);
        border-color: palette(grayscale, x-light);
        color: palette(grayscale, base);
    }
}


// ----------------------------
// #DEFAULT-ALT
// ----------------------------
.btn-default-alt {
    background: $transparent;
    border-color: palette(grayscale-cool, base);
    color: palette(grayscale-cool, base);

    // STATE: hover and focus
    &:hover,
    &.is-hovered,
    &:focus,
    &.is-focused {
        background: palette(primary, mid-dark);
        border-color: palette(primary, mid-dark);
        color: palette(grayscale, white);
    }

    // STATE: is pressed or active
    &:active,
    &.is-pressed,
    &.is-active {
        background: palette(primary, dark);
        border-color: palette(primary, dark);
    }

    // STATE: is disabled
    &:disabled,
    &.is-disabled {
        background: $transparent;
        border-color: palette(grayscale-cool, x-light);
        color: palette(grayscale-cool, mid-light);
    }
}


// ----------------------------
// #PRIMARY
// ----------------------------
.btn-primary {
    background: palette(primary, mid-dark);
    border-color: palette(primary, mid-dark);
    color: palette(grayscale, white);

    // STATE: hover and focus
    &:hover,
    &.is-hovered,
    &:focus,
    &.is-focused {
        background: palette(primary, base);
        border-color: palette(primary, base);
    }

    // STATE: is pressed or active
    &:active,
    &.is-pressed,
    &.is-active {
        background: palette(primary, mid-dark);
        border-color: palette(primary, mid-dark);
    }

    // STATE: is disabled
    &:disabled,
    &.is-disabled {
        background: palette(grayscale, x-light);
        border-color: palette(grayscale, x-light);
        color: palette(grayscale, base);
    }
}


// ----------------------------
// #SECONDARY
// ----------------------------
.btn-secondary {
    background: $transparent;
    border-color: $transparent;
    color: palette(primary, base);

    // STATE: hover and focus
    &:hover,
    &.is-hovered,
    &:focus,
    &.is-focused {
        border-color: palette(grayscale-cool, trans);
    }

    // STATE: is pressed or active
    &:active,
    &.is-pressed,
    &.is-active {
        border-color: palette(primary, dark);
        color: palette(primary, mid-dark);
    }

    // STATE: is disabled
    &:disabled,
    &.is-disabled {
        border-color: palette(grayscale, x-light);
        color: palette(grayscale, mid-light);
    }
}


// ----------------------------
// #SECONDARY-ALT
// ----------------------------
.btn-secondary-alt {
    background: $transparent;
    border-color: $transparent;
    color: palette(grayscale-cool, base);

    // STATE: hover and focus
    &:hover,
    &.is-hovered,
    &:focus,
    &.is-focused {
        background: palette(grayscale-cool, base);
        border-color: palette(grayscale-cool, base);
        color: palette(grayscale, white);
    }

    // STATE: is pressed or active
    &:active,
    &.is-pressed,
    &.is-active {
        background: palette(primary, dark);
        border-color: palette(primary, dark);
    }

    // STATE: is disabled
    &:disabled,
    &.is-disabled {
        border-color: palette(grayscale, x-light);
        color: palette(grayscale, mid-light);
    }
}


// ----------------------------
// #LINK
// ----------------------------
.btn-link {
    background: $transparent;
    border-color: $transparent;
    color: palette(primary, mid-dark);

    // STATE: hover and focus
    &:hover,
    &.is-hovered,
    &:focus,
    &.is-focused {
        color: palette(primary, base);
        text-decoration: underline;
    }

    // STATE: is pressed or active
    &:active,
    &.is-pressed,
    &.is-active {
        color: palette(primary, dark);
    }

    // STATE: is disabled
    &:disabled,
    &.is-disabled {
        display: none; // :)
        color: palette(grayscale, mid-light);
        text-decoration: none;
    }
}


// ----------------------------
// #ELEVATED
// ----------------------------
.btn-elevated {
    background: palette(primary, mid-dark);
    box-shadow: inset 0 0 -$buttons-shading 0 0 palette(primary, dark);
    border-color: palette(primary, dark);
    color: palette(grayscale, white);

    // STATE: hover and focus
    &:hover,
    &.is-hovered,
    &:focus,
    &.is-focused {
        background: palette(primary, base);
        box-shadow: inset 0 0 -$buttons-shading 0 0 palette(primary, mid-dark);
    }

    // STATE: is pressed or active
    &:active,
    &.is-pressed,
    &.is-active {
        background: palette(primary, dark);
        box-shadow: inset 0 $buttons-shading 0 0 palette(primary, x-dark);
    }

    // STATE: is disabled
    &:disabled,
    &.is-disabled {
        background: palette(grayscale, x-light);
        border-color: palette(grayscale, x-light);
        box-shadow: inset 0 -1px 0 palette(grayscale, mid-light);
        color: palette(grayscale, base);
    }
}


// ----------------------------
// #COMBO
// ----------------------------
.btn-combo {
    border-radius: 0;

    // targets the first element in a parent container
    &:first-of-type {
        border-top-left-radius: $buttons-border-radius;
        border-bottom-left-radius: $buttons-border-radius;
    }

    // targets the last element in a parent container
    &:last-of-type {
        border-top-right-radius: $buttons-border-radius;
        border-bottom-right-radius: $buttons-border-radius;
    }
}


// ----------------------------
// #ICONS
// ----------------------------
.has-icon {

}

.has-icon-reverse {

}


// ----------------------------
// #OVERLAY
// ----------------------------
.btn-overlay {
    background: $transparent;
    border-color: palette(grayscale, white);
    color: palette(grayscale, white);
    font-weight: font-weight(semi-bold);

    // STATE: hover and focus
    &:hover,
    &.is-hovered,
    &:focus,
    &.is-focused {
        background: palette(grayscale, white);
        color: palette(primary, mid-dark);
    }

    // STATE: is pressed or active
    &:active,
    &.is-pressed,
    &.is-active {
        color: palette(primary, x-dark);
    }

    // STATE: is disabled
    &:disabled,
    &.is-disabled {
        border-color: palette(grayscale, x-light);
        color: palette(grayscale, x-light);

        &:hover {
            background: $transparent;
            border-color: palette(grayscale, x-light);
            color: palette(grayscale, x-light);
        }
    }
}
